# 🌐 Employee Management System - Nginx 反向代理配置
# Production-ready Nginx configuration with security hardening

# 主配置區塊
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # 基本設置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 字符編碼
    charset utf-8;
    
    # 日誌格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log main;
    
    # 性能優化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 1000;
    client_max_body_size 20M;
    client_body_timeout 60;
    client_header_timeout 60;
    send_timeout 60;
    
    # Gzip 壓縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Brotli 壓縮 (如果有模組)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # 安全標頭 (全域)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(self), microphone=(), camera=()" always;
    
    # 隱藏 Nginx 版本
    server_tokens off;
    
    # 速率限制區域
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    
    # SSL 配置 (全域)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 上游伺服器定義
    upstream employee_app {
        least_conn;
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
        # 如果有多個實例可以添加：
        # server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # HTTP 到 HTTPS 重定向
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # 讓 Let's Encrypt 認證通過
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # 其他所有請求重定向到 HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # 主要 HTTPS 伺服器
    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        
        # 域名配置 (請替換為您的實際域名)
        server_name your-domain.com www.your-domain.com;
        
        # SSL 證書路徑
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
        
        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # CSP (Content Security Policy)
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; img-src 'self' data: https:; font-src 'self' https://cdn.jsdelivr.net; connect-src 'self'; frame-ancestors 'none';" always;
        
        # 根目錄
        root /var/www/employee-management/public;
        index index.html index.htm;
        
        # 一般速率限制
        limit_req zone=general burst=20 nodelay;
        
        # 靜態資源處理
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # 壓縮靜態資源
            gzip_static on;
            
            # 安全標頭
            add_header X-Content-Type-Options nosniff always;
        }
        
        # API 路由代理
        location /api/ {
            # API 專用速率限制
            limit_req zone=api burst=50 nodelay;
            
            # 代理設置
            proxy_pass http://employee_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # 超時設置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 快取控制
            proxy_cache_bypass $http_upgrade;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # 登入路由特殊限制
        location ~ ^/(api/)?(auth|login) {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://employee_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # WebSocket 支援 (如果需要)
        location /socket.io/ {
            proxy_pass http://employee_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 特殊設置
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
        }
        
        # 檔案上傳路由
        location /uploads/ {
            alias /var/www/employee-management/uploads/;
            
            # 安全檢查
            location ~* \.(php|asp|jsp|sh|py|pl|exe)$ {
                return 403;
            }
            
            # 快取設置
            expires 30d;
            add_header Cache-Control "public";
        }
        
        # 健康檢查端點
        location /health {
            proxy_pass http://employee_app;
            access_log off;
        }
        
        # robots.txt
        location /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\n";
        }
        
        # 安全相關路由
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(sql|git|env|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 預設路由 (SPA 支援)
        location / {
            try_files $uri $uri/ /index.html;
            
            # HTML 檔案不快取
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }
        
        # 錯誤頁面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # 管理員面板 (如果需要額外安全性)
    server {
        listen 443 ssl http2;
        server_name admin.your-domain.com;
        
        ssl_certificate /etc/nginx/ssl/admin.fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/admin.privkey.pem;
        
        # 更嚴格的安全設置
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        
        # IP 白名單 (可選)
        # allow 192.168.1.0/24;
        # deny all;
        
        location / {
            limit_req zone=general burst=10 nodelay;
            
            proxy_pass http://employee_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}